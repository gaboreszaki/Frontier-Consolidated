<?php
    
    namespace Tests\Unit;
    
    use App\Services\FileHandlingService;
    use Illuminate\Http\UploadedFile;
    use Illuminate\Support\Facades\Storage;
    use Tests\TestCase;
    
    class FileHandlingServiceTest extends TestCase
    {
        
        public function setUp(): void
        {
            parent::setUp(); // TODO: Change the autogenerated stub
            
            $this->fileName = null;
        }
        
        public function test_file_storage_can_store_original_file(): string|null
        {
            /// Given
            
            $file = UploadedFile::fake()->image('avatar.jpg');
            
            // When
            
            $FHS = new FileHandlingService();
            $fileName = $FHS->storeOriginal($file);
            
            /// Then
            Storage::disk('public')->assertExists(
                "originals/".$file->hashName()
            );
            
            return $fileName;
        }
        
        /**
         * @depends test_file_storage_can_store_original_file
         */
        
        public function test_file_can_be_processed_to_different_sizes($fileName)
        {
            /// Given
//            dump($fileName);
            $FHS = new FileHandlingService();
            
            /// When
            $FHS->processImageByType('card', $fileName);
            $FHS->processImageByType('thumbnail', $fileName);
            
            /// Then
            Storage::disk('public')->assertExists("originals/".$fileName);
            Storage::disk('public')->assertExists("cards/".$fileName);
            Storage::disk('public')->assertExists("thumbnails/".$fileName);
            
            return $fileName;
        }
        
        /**
         * @depends test_file_can_be_processed_to_different_sizes
         */
        public function test_all_files_can_be_deleted_by_original_name(string $fileNameToRemove)
        {
            /// Given
            // input by function input
            
            /// When
            $FHS = new FileHandlingService();
            $FHS->removeFile($fileNameToRemove);
            
            /// Then
//            print_r(Storage::disk('public')->allFiles('originals'));
//            print_r(Storage::disk('public')->allFiles('cards'));
//            print_r(Storage::disk('public')->allFiles('thumbnails'));
            
            Storage::disk('public')->assertMissing(
                "originals/$fileNameToRemove"
            
            );
        }
        
    }